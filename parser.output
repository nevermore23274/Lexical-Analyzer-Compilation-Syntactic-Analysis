Nonterminals useless in grammar

    optional_parameter
    parameter


Terminals unused in grammar

    ERROR_TOKEN
    ','


Rules useless in grammar

   50 optional_parameter: optional_parameter RETURNS type ','
   51                   | parameter

   52 parameter: IDENTIFIER ':' type
   53          | %empty


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body
    2         | error

    3 function_header: FUNCTION IDENTIFIER RETURNS type ';'
    4                | FUNCTION IDENTIFIER error

    5 optional_variable: optional_variable variable
    6                  | %empty

    7 variable: IDENTIFIER ':' type IS statement_

    8 type: INTEGER
    9     | REAL
   10     | BOOLEAN

   11 body: BEGIN_ statement_ END ';'

   12 statement_: statement ';'
   13           | error ';'
   14           | error INT_LITERAL ';'
   15           | error IDENTIFIER ';'
   16           | error REAL_LITERAL ';'
   17           | error ADDOP ';'

   18 statement: expression
   19          | REDUCE operator reductions ENDREDUCE
   20          | IF expression THEN statement_ ELSE statement_ ENDIF
   21          | CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE

   22 reductions: reductions statement_
   23           | %empty

   24 optional_cases: optional_cases case
   25               | %empty

   26 case: WHEN INT_LITERAL ARROW statement_

   27 operator: ADDOP
   28         | MULOP REMOP
   29         | EXPOP

   30 expression: expression ANDOP relation
   31           | expression2

   32 expression2: expression OROP relation
   33            | relation

   34 relation: relation RELOP term
   35         | term

   36 term: term ADDOP factor
   37     | factor

   38 factor: factor MULOP primary
   39       | factor REMOP
   40       | exponent

   41 exponent: factor EXPOP notion
   42         | notion

   43 notion: notion NOT primary
   44       | primary

   45 primary: '(' expression ')'
   46        | INT_LITERAL
   47        | REAL_LITERAL
   48        | BOOL_LITERAL
   49        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 45
    ')' (41) 45
    ',' (44)
    ':' (58) 7
    ';' (59) 3 11 12 13 14 15 16 17
    error (256) 2 4 13 14 15 16 17
    IDENTIFIER (258) 3 4 7 15 49
    INT_LITERAL (259) 14 26 46
    REAL_LITERAL (260) 16 47
    BOOL_LITERAL (261) 48
    ADDOP (262) 17 27 36
    MULOP (263) 28 38
    RELOP (264) 34
    OROP (265) 32
    ANDOP (266) 30
    EXPOP (267) 29 41
    REMOP (268) 28 39
    BEGIN_ (269) 11
    BOOLEAN (270) 10
    END (271) 11
    ENDREDUCE (272) 19
    FUNCTION (273) 3 4
    INTEGER (274) 8
    IS (275) 7 21
    REDUCE (276) 19
    RETURNS (277) 3
    CASE (278) 21
    ELSE (279) 20
    ARROW (280) 21 26
    ENDCASE (281) 21
    ENDIF (282) 20
    IF (283) 20
    OTHERS (284) 21
    REAL (285) 9
    THEN (286) 20
    WHEN (287) 26
    NOT (288) 43
    ERROR_TOKEN (289)


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    function (41)
        on left: 1 2
        on right: 0
    function_header (42)
        on left: 3 4
        on right: 1
    optional_variable (43)
        on left: 5 6
        on right: 1 5
    variable (44)
        on left: 7
        on right: 5
    type (45)
        on left: 8 9 10
        on right: 3 7
    body (46)
        on left: 11
        on right: 1
    statement_ (47)
        on left: 12 13 14 15 16 17
        on right: 7 11 20 21 22 26
    statement (48)
        on left: 18 19 20 21
        on right: 12
    reductions (49)
        on left: 22 23
        on right: 19 22
    optional_cases (50)
        on left: 24 25
        on right: 21 24
    case (51)
        on left: 26
        on right: 24
    operator (52)
        on left: 27 28 29
        on right: 19
    expression (53)
        on left: 30 31
        on right: 18 20 21 30 32 45
    expression2 (54)
        on left: 32 33
        on right: 31
    relation (55)
        on left: 34 35
        on right: 30 32 33 34
    term (56)
        on left: 36 37
        on right: 34 35 36
    factor (57)
        on left: 38 39 40
        on right: 36 37 38 39 41
    exponent (58)
        on left: 41 42
        on right: 40
    notion (59)
        on left: 43 44
        on right: 41 42 43
    primary (60)
        on left: 45 46 47 48 49
        on right: 38 43 44


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    2 function: error .

    $default  reduce using rule 2 (function)


State 2

    3 function_header: FUNCTION . IDENTIFIER RETURNS type ';'
    4                | FUNCTION . IDENTIFIER error

    IDENTIFIER  shift, and go to state 5


State 3

    0 $accept: function . $end

    $end  shift, and go to state 6


State 4

    1 function: function_header . optional_variable body

    $default  reduce using rule 6 (optional_variable)

    optional_variable  go to state 7


State 5

    3 function_header: FUNCTION IDENTIFIER . RETURNS type ';'
    4                | FUNCTION IDENTIFIER . error

    error    shift, and go to state 8
    RETURNS  shift, and go to state 9


State 6

    0 $accept: function $end .

    $default  accept


State 7

    1 function: function_header optional_variable . body
    5 optional_variable: optional_variable . variable

    IDENTIFIER  shift, and go to state 10
    BEGIN_      shift, and go to state 11

    variable  go to state 12
    body      go to state 13


State 8

    4 function_header: FUNCTION IDENTIFIER error .

    $default  reduce using rule 4 (function_header)


State 9

    3 function_header: FUNCTION IDENTIFIER RETURNS . type ';'

    BOOLEAN  shift, and go to state 14
    INTEGER  shift, and go to state 15
    REAL     shift, and go to state 16

    type  go to state 17


State 10

    7 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 18


State 11

   11 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 24
    CASE          shift, and go to state 25
    IF            shift, and go to state 26
    '('           shift, and go to state 27

    statement_   go to state 28
    statement    go to state 29
    expression   go to state 30
    expression2  go to state 31
    relation     go to state 32
    term         go to state 33
    factor       go to state 34
    exponent     go to state 35
    notion       go to state 36
    primary      go to state 37


State 12

    5 optional_variable: optional_variable variable .

    $default  reduce using rule 5 (optional_variable)


State 13

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 14

   10 type: BOOLEAN .

    $default  reduce using rule 10 (type)


State 15

    8 type: INTEGER .

    $default  reduce using rule 8 (type)


State 16

    9 type: REAL .

    $default  reduce using rule 9 (type)


State 17

    3 function_header: FUNCTION IDENTIFIER RETURNS type . ';'

    ';'  shift, and go to state 38


State 18

    7 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 14
    INTEGER  shift, and go to state 15
    REAL     shift, and go to state 16

    type  go to state 39


State 19

   13 statement_: error . ';'
   14           | error . INT_LITERAL ';'
   15           | error . IDENTIFIER ';'
   16           | error . REAL_LITERAL ';'
   17           | error . ADDOP ';'

    IDENTIFIER    shift, and go to state 40
    INT_LITERAL   shift, and go to state 41
    REAL_LITERAL  shift, and go to state 42
    ADDOP         shift, and go to state 43
    ';'           shift, and go to state 44


State 20

   49 primary: IDENTIFIER .

    $default  reduce using rule 49 (primary)


State 21

   46 primary: INT_LITERAL .

    $default  reduce using rule 46 (primary)


State 22

   47 primary: REAL_LITERAL .

    $default  reduce using rule 47 (primary)


State 23

   48 primary: BOOL_LITERAL .

    $default  reduce using rule 48 (primary)


State 24

   19 statement: REDUCE . operator reductions ENDREDUCE

    ADDOP  shift, and go to state 45
    MULOP  shift, and go to state 46
    EXPOP  shift, and go to state 47

    operator  go to state 48


State 25

   21 statement: CASE . expression IS optional_cases OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 27

    expression   go to state 49
    expression2  go to state 31
    relation     go to state 32
    term         go to state 33
    factor       go to state 34
    exponent     go to state 35
    notion       go to state 36
    primary      go to state 37


State 26

   20 statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 27

    expression   go to state 50
    expression2  go to state 31
    relation     go to state 32
    term         go to state 33
    factor       go to state 34
    exponent     go to state 35
    notion       go to state 36
    primary      go to state 37


State 27

   45 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 27

    expression   go to state 51
    expression2  go to state 31
    relation     go to state 32
    term         go to state 33
    factor       go to state 34
    exponent     go to state 35
    notion       go to state 36
    primary      go to state 37


State 28

   11 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 52


State 29

   12 statement_: statement . ';'

    ';'  shift, and go to state 53


State 30

   18 statement: expression .
   30 expression: expression . ANDOP relation
   32 expression2: expression . OROP relation

    OROP   shift, and go to state 54
    ANDOP  shift, and go to state 55

    $default  reduce using rule 18 (statement)


State 31

   31 expression: expression2 .

    $default  reduce using rule 31 (expression)


State 32

   33 expression2: relation .
   34 relation: relation . RELOP term

    RELOP  shift, and go to state 56

    $default  reduce using rule 33 (expression2)


State 33

   35 relation: term .
   36 term: term . ADDOP factor

    ADDOP  shift, and go to state 57

    $default  reduce using rule 35 (relation)


State 34

   37 term: factor .
   38 factor: factor . MULOP primary
   39       | factor . REMOP
   41 exponent: factor . EXPOP notion

    MULOP  shift, and go to state 58
    EXPOP  shift, and go to state 59
    REMOP  shift, and go to state 60

    $default  reduce using rule 37 (term)


State 35

   40 factor: exponent .

    $default  reduce using rule 40 (factor)


State 36

   42 exponent: notion .
   43 notion: notion . NOT primary

    NOT  shift, and go to state 61

    $default  reduce using rule 42 (exponent)


State 37

   44 notion: primary .

    $default  reduce using rule 44 (notion)


State 38

    3 function_header: FUNCTION IDENTIFIER RETURNS type ';' .

    $default  reduce using rule 3 (function_header)


State 39

    7 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 62


State 40

   15 statement_: error IDENTIFIER . ';'

    ';'  shift, and go to state 63


State 41

   14 statement_: error INT_LITERAL . ';'

    ';'  shift, and go to state 64


State 42

   16 statement_: error REAL_LITERAL . ';'

    ';'  shift, and go to state 65


State 43

   17 statement_: error ADDOP . ';'

    ';'  shift, and go to state 66


State 44

   13 statement_: error ';' .

    $default  reduce using rule 13 (statement_)


State 45

   27 operator: ADDOP .

    $default  reduce using rule 27 (operator)


State 46

   28 operator: MULOP . REMOP

    REMOP  shift, and go to state 67


State 47

   29 operator: EXPOP .

    $default  reduce using rule 29 (operator)


State 48

   19 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 23 (reductions)

    reductions  go to state 68


State 49

   21 statement: CASE expression . IS optional_cases OTHERS ARROW statement_ ENDCASE
   30 expression: expression . ANDOP relation
   32 expression2: expression . OROP relation

    OROP   shift, and go to state 54
    ANDOP  shift, and go to state 55
    IS     shift, and go to state 69


State 50

   20 statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   30 expression: expression . ANDOP relation
   32 expression2: expression . OROP relation

    OROP   shift, and go to state 54
    ANDOP  shift, and go to state 55
    THEN   shift, and go to state 70


State 51

   30 expression: expression . ANDOP relation
   32 expression2: expression . OROP relation
   45 primary: '(' expression . ')'

    OROP   shift, and go to state 54
    ANDOP  shift, and go to state 55
    ')'    shift, and go to state 71


State 52

   11 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 72


State 53

   12 statement_: statement ';' .

    $default  reduce using rule 12 (statement_)


State 54

   32 expression2: expression OROP . relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 27

    relation  go to state 73
    term      go to state 33
    factor    go to state 34
    exponent  go to state 35
    notion    go to state 36
    primary   go to state 37


State 55

   30 expression: expression ANDOP . relation

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 27

    relation  go to state 74
    term      go to state 33
    factor    go to state 34
    exponent  go to state 35
    notion    go to state 36
    primary   go to state 37


State 56

   34 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 27

    term      go to state 75
    factor    go to state 34
    exponent  go to state 35
    notion    go to state 36
    primary   go to state 37


State 57

   36 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 27

    factor    go to state 76
    exponent  go to state 35
    notion    go to state 36
    primary   go to state 37


State 58

   38 factor: factor MULOP . primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 27

    primary  go to state 77


State 59

   41 exponent: factor EXPOP . notion

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 27

    notion   go to state 78
    primary  go to state 37


State 60

   39 factor: factor REMOP .

    $default  reduce using rule 39 (factor)


State 61

   43 notion: notion NOT . primary

    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    '('           shift, and go to state 27

    primary  go to state 79


State 62

    7 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 24
    CASE          shift, and go to state 25
    IF            shift, and go to state 26
    '('           shift, and go to state 27

    statement_   go to state 80
    statement    go to state 29
    expression   go to state 30
    expression2  go to state 31
    relation     go to state 32
    term         go to state 33
    factor       go to state 34
    exponent     go to state 35
    notion       go to state 36
    primary      go to state 37


State 63

   15 statement_: error IDENTIFIER ';' .

    $default  reduce using rule 15 (statement_)


State 64

   14 statement_: error INT_LITERAL ';' .

    $default  reduce using rule 14 (statement_)


State 65

   16 statement_: error REAL_LITERAL ';' .

    $default  reduce using rule 16 (statement_)


State 66

   17 statement_: error ADDOP ';' .

    $default  reduce using rule 17 (statement_)


State 67

   28 operator: MULOP REMOP .

    $default  reduce using rule 28 (operator)


State 68

   19 statement: REDUCE operator reductions . ENDREDUCE
   22 reductions: reductions . statement_

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    ENDREDUCE     shift, and go to state 81
    REDUCE        shift, and go to state 24
    CASE          shift, and go to state 25
    IF            shift, and go to state 26
    '('           shift, and go to state 27

    statement_   go to state 82
    statement    go to state 29
    expression   go to state 30
    expression2  go to state 31
    relation     go to state 32
    term         go to state 33
    factor       go to state 34
    exponent     go to state 35
    notion       go to state 36
    primary      go to state 37


State 69

   21 statement: CASE expression IS . optional_cases OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 25 (optional_cases)

    optional_cases  go to state 83


State 70

   20 statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 24
    CASE          shift, and go to state 25
    IF            shift, and go to state 26
    '('           shift, and go to state 27

    statement_   go to state 84
    statement    go to state 29
    expression   go to state 30
    expression2  go to state 31
    relation     go to state 32
    term         go to state 33
    factor       go to state 34
    exponent     go to state 35
    notion       go to state 36
    primary      go to state 37


State 71

   45 primary: '(' expression ')' .

    $default  reduce using rule 45 (primary)


State 72

   11 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 11 (body)


State 73

   32 expression2: expression OROP relation .
   34 relation: relation . RELOP term

    RELOP  shift, and go to state 56

    $default  reduce using rule 32 (expression2)


State 74

   30 expression: expression ANDOP relation .
   34 relation: relation . RELOP term

    RELOP  shift, and go to state 56

    $default  reduce using rule 30 (expression)


State 75

   34 relation: relation RELOP term .
   36 term: term . ADDOP factor

    ADDOP  shift, and go to state 57

    $default  reduce using rule 34 (relation)


State 76

   36 term: term ADDOP factor .
   38 factor: factor . MULOP primary
   39       | factor . REMOP
   41 exponent: factor . EXPOP notion

    MULOP  shift, and go to state 58
    EXPOP  shift, and go to state 59
    REMOP  shift, and go to state 60

    $default  reduce using rule 36 (term)


State 77

   38 factor: factor MULOP primary .

    $default  reduce using rule 38 (factor)


State 78

   41 exponent: factor EXPOP notion .
   43 notion: notion . NOT primary

    NOT  shift, and go to state 61

    $default  reduce using rule 41 (exponent)


State 79

   43 notion: notion NOT primary .

    $default  reduce using rule 43 (notion)


State 80

    7 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 7 (variable)


State 81

   19 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 19 (statement)


State 82

   22 reductions: reductions statement_ .

    $default  reduce using rule 22 (reductions)


State 83

   21 statement: CASE expression IS optional_cases . OTHERS ARROW statement_ ENDCASE
   24 optional_cases: optional_cases . case

    OTHERS  shift, and go to state 85
    WHEN    shift, and go to state 86

    case  go to state 87


State 84

   20 statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 88


State 85

   21 statement: CASE expression IS optional_cases OTHERS . ARROW statement_ ENDCASE

    ARROW  shift, and go to state 89


State 86

   26 case: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 90


State 87

   24 optional_cases: optional_cases case .

    $default  reduce using rule 24 (optional_cases)


State 88

   20 statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 24
    CASE          shift, and go to state 25
    IF            shift, and go to state 26
    '('           shift, and go to state 27

    statement_   go to state 91
    statement    go to state 29
    expression   go to state 30
    expression2  go to state 31
    relation     go to state 32
    term         go to state 33
    factor       go to state 34
    exponent     go to state 35
    notion       go to state 36
    primary      go to state 37


State 89

   21 statement: CASE expression IS optional_cases OTHERS ARROW . statement_ ENDCASE

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 24
    CASE          shift, and go to state 25
    IF            shift, and go to state 26
    '('           shift, and go to state 27

    statement_   go to state 92
    statement    go to state 29
    expression   go to state 30
    expression2  go to state 31
    relation     go to state 32
    term         go to state 33
    factor       go to state 34
    exponent     go to state 35
    notion       go to state 36
    primary      go to state 37


State 90

   26 case: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 93


State 91

   20 statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 94


State 92

   21 statement: CASE expression IS optional_cases OTHERS ARROW statement_ . ENDCASE

    ENDCASE  shift, and go to state 95


State 93

   26 case: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 19
    IDENTIFIER    shift, and go to state 20
    INT_LITERAL   shift, and go to state 21
    REAL_LITERAL  shift, and go to state 22
    BOOL_LITERAL  shift, and go to state 23
    REDUCE        shift, and go to state 24
    CASE          shift, and go to state 25
    IF            shift, and go to state 26
    '('           shift, and go to state 27

    statement_   go to state 96
    statement    go to state 29
    expression   go to state 30
    expression2  go to state 31
    relation     go to state 32
    term         go to state 33
    factor       go to state 34
    exponent     go to state 35
    notion       go to state 36
    primary      go to state 37


State 94

   20 statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 20 (statement)


State 95

   21 statement: CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE .

    $default  reduce using rule 21 (statement)


State 96

   26 case: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 26 (case)
